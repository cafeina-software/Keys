# Keys 0.1.1

New unstable version with some additions and many under-the-hoods works that
greatly increased the application's stability and reliability.

* New features:

- (app): added scripting support for some keyring operations. This can be
  verified with "hey Keys getsuites". This could eventually be expanded to
  add more supported operations, both about keystore operations and the
  application's functionality management.
- (ui): dragging and dropping a set of exported keys files on to the keyring
  view with a keyring selected now allows to bulk import them with a dialog box.
  Invalid files will be ignored. This should eventually be merged with the
  option from the menu Keyring->Import keyâ€¦.

* Improvements:

- (documentation): expanded with some newer features added after the last time
  the documentation was written (such as server management, keyring lockdown, or
  key import and export), as well as some updates to the existing ones.
- (localization): updated English and Spanish catalogs.
- (model): fixes for some status returns that mistakenly were reporting error
  when there was a success for some operations such as key insertion and removal.
- (model): additional checks for invalid values in search templates.
- (main): expanded help string.
- (ui model): rework of UI model and internal messaging system in application,
  window and keyring view. Instead of creating and mantaining a set of keyring
  views for each keyring, which required to have a needlessly complex system for
  search and notification, it now uses a single keyring view that is emptied and
  reloaded to work with the data of the keyring when it is selected.
- (app, ui): it can open with a keyring in focus with the command line flag
  "--keyring KeyringName".
- (app): it can reset the settings before the initialization with the command
  line flag "--reset-settings".
- (keyring view): removed the expensive automatic max-length calculator of
  column lengths. Under certain circumstances it could lead to crashes (mainly
  after the newer ui model rework).

# Keys 0.1.0

New unstable version with more behind-the-doors changes to
improve the reliability of the operations as well as new options
to perform some additional functions.

* New features:

- (keystore db, testing): option to make a plain backup of the database. This is
   a simple or encrypted snapshot copy of the database at the time it was performed.
- (keystore db, testing): option to restore a previously made backup.
- (keystore, testing): option to wipe the database. This will delete all the keyrings
   other than "Master" and all the keys.
- (keyrings): import key. Option to import a previously exported key
  (that are in a flattened BMessage format).
- (keyrings, testing): option to wipe a keyring. This will delete all of its keys but
  keep the keyring itself.
- (keyrings): implemented remaining option of the key storage API related
  to keyring lockdown, including "lock keyring", "set unlock key" and "remove
  unlock key".
- (keys): export selected key as a flattened BMessage file. This could allow to
  use that file to restore it later.

* Improvements:

- Most of the keystore read-write related code was moved to KeysApplication
  class for generic usage instead of doing it locally. Also the implementations
  were reworked to make use of messaging and better checks.
- The keystore data model had some modifications as well.
- Keyrings list view now uses a customized list view that pops up a context menu
  with options related to the selected keyring, or a generic pop-up menu with
  options related to the keystore overall otherwise.
- The keyring statistics dialog box was reworked. Before it was a simple BAlert,
  but now it is a more organized full featured dialog box that also shows if the
  keyring is currently locked.
- The add key dialog box has a new option that shows the password strength.

* Limitations and known issues:

- It still is not able to properly manage partially duplicated keys. Those are
  keys with the same identifier but different secondary identifier.

# Keys 0.0.1

This is an unstable initial version intended only for testing and previewing.
It works if it is used to view and list data, but editing features are not
completely stable, although behind the scenes the changes are always saved, that
is not always replicated to the user interface. It also could contain
a number of stability issues that could make it not useful for end users.

* New features:

- New application written from scratch, using the Haiku Key Storage API.
- It can display the keyrings in the keystore, as well as keys in each keyrings,
  and which applications were allowed to access each keyring. For each key,
  it is possible to display the key metadata and its value.
- UNSTABLE (ui level): it can create and delete keyrings.
- UNSTABLE (ui level): it can create and delete keys under a keyring.
- It can revoke (remove) an application authorization to a certain keyring.
- It can restart the keystore_server if for some reason it was ended.

* Miscellaneous:

- Naming: the name "Keys" does what its name says, it is intended to
  deal with things that have to do with the keystore of Haiku.
